document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("ticketForm"),t=document.getElementById("fileInput"),n=document.getElementById("fileUploadArea"),i=document.getElementById("fileList"),a=document.getElementById("submitBtn"),s=document.getElementById("submitText"),l=document.getElementById("submitLoader");let o=[];function r(){i.innerHTML="",o.forEach((e,t)=>{const n=document.createElement("div");n.className="file-item",n.innerHTML=`
                <div class="file-info">
                    ${e.preview?`<img src="${e.preview}" alt="Preview" class="file-preview">`:'<i class="fas fa-file" style="color: #3b82f6; font-size: 1.25rem;"></i>'}
                    <div class="file-details">
                        <h4>${e.name}</h4>
                        <p>${(e.size/1024/1024).toFixed(2)} MB</p>
                    </div>
                </div>
                <button type="button" class="remove-file" onclick="removeFile(${t})">
                    <i class="fas fa-times"></i>
                </button>
            `,i.appendChild(n)})}n.addEventListener("click",()=>{t.click()}),t.addEventListener("change",function(e){const t=Array.from(e.target.files);t.forEach(e=>{if(e.size>10485760)return void showToast(`Arquivo ${e.name} é muito grande. Máximo 10MB.`,"error");const t={file:e,name:e.name,size:e.size,type:e.type,preview:null};if(e.type.startsWith("image/")){const n=new FileReader;n.onload=e=>{t.preview=e.target.result,o.push(t),r()},n.readAsDataURL(e)}else o.push(t),r()}),t.value=""}),window.removeFile=function(e){o.splice(e,1),r()},e.addEventListener("submit",async function(t){t.preventDefault();const n=document.getElementById("firstName").value.trim(),i=document.getElementById("lastName").value.trim(),c=document.getElementById("department").value,d=document.getElementById("destinationArea").value,m=document.getElementById("description").value.trim(),u=document.getElementById("contact").value.trim();if(!n||!i||!c||!d||!m)return void showToast("Por favor, preencha todos os campos obrigatórios.","error");a.disabled=!0,s.style.display="none",l.style.display="inline";try{const t=await Promise.all(o.map(e=>new Promise(t=>{const n=new FileReader;n.onload=i=>{t({name:e.name,size:e.size,type:e.type,data:i.target.result})},n.readAsDataURL(e.file)}))),a={firstName:n,lastName:i,department:c,destinationArea:d,description:m,contact:u,files:t};const r = await fetch('/api/tickets', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(a)
        });
        
        if (!r.ok) {
          throw new Error('Erro ao criar chamado');
        }
        
        const result = await r.json();
        showToast(`Chamado ${result.ticketNumber} criado com sucesso!`,"success");
        e.reset();
        o=[];
        r()}catch(e){console.error("Erro ao criar chamado:",e),showToast("Erro ao criar chamado. Tente novamente.","error")}finally{a.disabled=!1,s.style.display="inline",l.style.display="none"}})});function showToast(e,t="success"){const n=document.getElementById("toast");n.textContent=e,n.className="toast show","error"===t?n.classList.add("error"):n.classList.remove("error"),setTimeout(()=>{n.classList.remove("show")},3e3)}