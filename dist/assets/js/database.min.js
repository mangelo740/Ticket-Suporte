class TicketDatabase{constructor(){this.dbName="ticketSystem",this.initDatabase()}initDatabase(){if(!localStorage.getItem(this.dbName)){const t={tickets:[],nextId:1,settings:{version:"1.0.0",created:(new Date).toISOString()}};localStorage.setItem(this.dbName,JSON.stringify(t))}}getDatabase(){return JSON.parse(localStorage.getItem(this.dbName)||"{}")}saveDatabase(t){localStorage.setItem(this.dbName,JSON.stringify(t))}createTicket(t){const e=this.getDatabase(),i={id:e.nextId.toString(),ticketNumber:`TK${e.nextId.toString().padStart(4,"0")}`,firstName:t.firstName,lastName:t.lastName,department:t.department,destinationArea:t.destinationArea,description:t.description,contact:t.contact||"",files:t.files||[],status:"Aberto",priority:"Média",notes:[],createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};return e.tickets.push(i),e.nextId++,this.saveDatabase(e),i.ticketNumber}getAllTickets(){return this.getDatabase().tickets||[]}getTicketById(t){const e=this.getDatabase();return e.tickets.find(e=>e.id===t)||null}getTicketsByStatus(t){const e=this.getDatabase();return e.tickets.filter(e=>e.status===t)}getTicketsByPriority(t){const e=this.getDatabase();return e.tickets.filter(e=>e.priority===t)}updateTicket(t,e){const i=this.getDatabase(),s=i.tickets.findIndex(e=>e.id===t);return-1!==s&&(i.tickets[s]={...i.tickets[s],...e,updatedAt:(new Date).toISOString()},this.saveDatabase(i),!0)}addNoteToTicket(t,e){const i=this.getDatabase(),s=i.tickets.find(e=>e.id===t);if(!s)return!1;const a={id:Date.now().toString(),text:e,createdAt:(new Date).toISOString()};return s.notes=s.notes||[],s.notes.push(a),s.updatedAt=(new Date).toISOString(),this.saveDatabase(i),!0}deleteTicket(t){const e=this.getDatabase(),i=e.tickets.findIndex(e=>e.id===t);return-1!==i&&(e.tickets.splice(i,1),this.saveDatabase(e),!0)}getStatistics(){const t=this.getAllTickets(),e={total:t.length,byStatus:{Aberto:0,"Em Andamento":0,Resolvido:0,Fechado:0},byPriority:{Crítica:0,Alta:0,Média:0,Baixa:0}};return t.forEach(t=>{e.byStatus[t.status]=(e.byStatus[t.status]||0)+1,e.byPriority[t.priority]=(e.byPriority[t.priority]||0)+1}),e}searchTickets(t){const e=this.getAllTickets(),i=t.toLowerCase();return e.filter(t=>t.ticketNumber.toLowerCase().includes(i)||t.firstName.toLowerCase().includes(i)||t.lastName.toLowerCase().includes(i)||t.department.toLowerCase().includes(i)||t.destinationArea.toLowerCase().includes(i)||t.description.toLowerCase().includes(i))}filterTickets(t){let e=this.getAllTickets();return t.status&&"all"!==t.status&&(e=e.filter(e=>e.status===t.status)),t.priority&&"all"!==t.priority&&(e=e.filter(e=>e.priority===t.priority)),t.search&&(e=e.filter(e=>{const i=t.search.toLowerCase();return e.ticketNumber.toLowerCase().includes(i)||e.firstName.toLowerCase().includes(i)||e.lastName.toLowerCase().includes(i)||e.department.toLowerCase().includes(i)||e.destinationArea.toLowerCase().includes(i)||e.description.toLowerCase().includes(i)})),e}clearDatabase(){localStorage.removeItem(this.dbName),this.initDatabase()}exportData(){return this.getDatabase()}importData(t){this.saveDatabase(t)}}const ticketDB=new TicketDatabase;